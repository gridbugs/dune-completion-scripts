#!/usr/bin/env bash
# Completion script for dune. Generated by climate.
_dune_complete() {
_dune_i
if [ "$COMP_CWORD" == "0" ]; then
_dune_e "Unexpected \$COMP_CWORD value of 0. $COMP_CWORD should be at least 1 as the shell uses the first word of the command line to determine which completion script to run."
elif [ "$(_dune_f)" -lt 2 ]; then
_dune_e "Unexpected length of \$COMP_WORDS array: ${#COMP_WORDS[@]}. Its length should be at least 2 since the first element should always be the program name, and the second element will be the first word after the program name, which is expected to be the empty string if no additional words have been entered after the program name."
else
_dune_k
_dune_Lc "$1" "$2" "$3"
case "$?" in
100)
:
;;
102)
_dune_e "Unexpected error in completion script: Traversed command line beyond the current cursor position"
;;
101)
_dune_e "Unexpected error in completion script: Traversed beyond the end of the command line"
;;
*)
_dune_e "Unknown error in completion script"
;;
esac
fi
}
_dune_a=100
_dune_b=101
_dune_c=102
_dune_d() {
[ "$1" -gt "$_dune_a" ]
}
_dune_e() {
echo "$1" > /dev/stderr
}
_dune_f() {
echo "${#COMP_WORDS[@]}"
}
_dune_g() {
local i=$1
if [ "$i" -ge "$(_dune_f)" ]; then
return "$_dune_b"
fi
echo "${COMP_WORDS[$i]}"
}
_dune_h=0
_dune_i() {
_dune_h=0
}
_dune_j() {
_dune_g "$_dune_h"
}
_dune_k() {
_dune_h=$((_dune_h + 1))
}
_dune_l() {
test "$_dune_h" -eq "$COMP_CWORD"
}
_dune_m() {
test "$_dune_h" -gt "$COMP_CWORD"
}
_dune_n() {
while IFS= read -r l; do
COMPREPLY+=( "$l" )
done < <(compgen -A file -- "$1")
type compopt &> /dev/null && compopt -o filenames
}
_dune_o() {
COMPREPLY+=($(compgen -W "$2" -- "$1"))
}
_dune_p() {
local i="$1" w="$2"
local c="dune --print-reentrant-completion-hints=$i -- $COMP_LINE"
COMPREPLY+=($(compgen -W "$(eval "$c")" -- "$w"))
}
_dune_q() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_r() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_q "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_s() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_t() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_s "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_u() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --na --no-buffer --no-print-directory --not-available --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --na | --not-available | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_v() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_w() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_v "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --missing --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --sexp --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --unstable-by-dir --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --unstable-by-dir | --missing | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --sexp | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_x() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_y() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_x "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --alias --alias-rec --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--alias-rec | --debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --alias)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --alias-rec | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --alias | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_z() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --preview --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --preview | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_A() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_B() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_C() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_B "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --bindir --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --create-install-files --datadir --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --destdir --diff-command --display-separate-messages --docdir --dry-run --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --etcdir --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --libdir --libexecdir --mandir --manpage --no-buffer --no-print-directory --only-packages --prefix --print-metrics --profile --promote-install-files --release --relocatable --require-dune-project-file --root --sandbox --sbindir --sections --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--context | --datadir | --bindir | --docdir | --libdir | --prefix | --error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --destdir | --mandir | --etcdir | --sbindir | --libexecdir | --sections)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --context | --create-install-files | --dry-run | --datadir | --bindir | --docdir | --libdir | --prefix | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --destdir | --mandir | --etcdir | --sbindir | --libexecdir | --relocatable | --sections | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_D() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_E() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_D "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --bindir --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --create-install-files --datadir --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --destdir --diff-command --display-separate-messages --docdir --dry-run --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --etcdir --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --libdir --libexecdir --mandir --manpage --no-buffer --no-print-directory --only-packages --prefix --print-metrics --profile --promote-install-files --release --relocatable --require-dune-project-file --root --sandbox --sbindir --sections --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--context | --datadir | --bindir | --docdir | --libdir | --prefix | --error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --destdir | --mandir | --etcdir | --sbindir | --libexecdir | --sections)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --context | --create-install-files | --dry-run | --datadir | --bindir | --docdir | --libdir | --prefix | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --destdir | --mandir | --etcdir | --sbindir | --libexecdir | --relocatable | --sections | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_F() {
case "$2" in
0 | *)
_dune_n "$1"
;;
esac
}
_dune_G() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_F "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-build --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--context | --error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --no-build | --context | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_H() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--build-info --debug-backtraces --help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --build-info | --debug-backtraces | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_I() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_J() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_I "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --makefile --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --recursive --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -m -o -r -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
-o | --error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | -m | --makefile | -o | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | -r | --recursive | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_K() {
case "$2" in
0 | *)
_dune_n "$1"
;;
esac
}
_dune_L() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_K "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--context | --debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --context | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_M() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_N() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_M "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_O() {
case "$2" in
0)
_dune_n "$1"
;;
esac
}
_dune_P() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_O "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --field --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --field)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --field | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Q() {
case "$2" in
0)
_dune_n "$1"
;;
esac
}
_dune_R() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Q "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--build-info --help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --build-info | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_S() {
case "$2" in
0)
_dune_n "$1"
;;
esac
}
_dune_T() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_S "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--dune-version --help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--dune-version)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --dune-version | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_U() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_V() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage --size --trimmed-size -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--trimmed-size | --size)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --trimmed-size | --size | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_W() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --machine-readable --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --machine-readable | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_X() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Y() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "trim size clear"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
trim)
_dune_V "$1" "$2" "$3"
return "$?"
;;
size)
_dune_W "$1" "$2" "$3"
return "$?"
;;
clear)
_dune_X "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Z() {
case "$2" in
0)
_dune_n "$1"
;;
esac
}
_dune__a() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Z "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_aa() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_ba() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_ca() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_da() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --quit-on-disconnect --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --quit-on-disconnect | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_ea() {
case "$2" in
0 | *)
_dune_n "$1"
;;
esac
}
_dune_fa() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_ea "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--context | --debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --context | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_ga() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_ha() {
case "$2" in
0)
_dune_n "$1"
;;
esac
}
_dune_ia() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_ha "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_ja() {
case "$2" in
0)
_dune_n "$1"
;;
esac
}
_dune_ka() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_ja "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_la() {
case "$2" in
0)
_dune_n "$1"
;;
esac
}
_dune_ma() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_la "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_na() {
case "$2" in
0)
_dune_n "$1"
;;
esac
}
_dune_oa() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_na "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_pa() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_qa() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "dump-config start-session"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
dump-config)
_dune_oa "$1" "$2" "$3"
return "$?"
;;
start-session)
_dune_pa "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_ra() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_sa() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "utop ocaml-merlin dump-dot-merlin top top-module merlin doc"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
utop)
_dune_fa "$1" "$2" "$3"
return "$?"
;;
ocaml-merlin)
_dune_ga "$1" "$2" "$3"
return "$?"
;;
dump-dot-merlin)
_dune_ia "$1" "$2" "$3"
return "$?"
;;
top)
_dune_ka "$1" "$2" "$3"
return "$?"
;;
top-module)
_dune_ma "$1" "$2" "$3"
return "$?"
;;
merlin)
_dune_qa "$1" "$2" "$3"
return "$?"
;;
doc)
_dune_ra "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_ta() {
case "$2" in
0 | *)
_dune_n "$1"
;;
esac
}
_dune_ua() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_ta "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-build --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --toplevel --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--toplevel | --debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --toplevel | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --context | --no-build | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_va() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "top"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
top)
_dune_ua "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_wa() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_xa() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_wa "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --format --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --lang --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --sanitize-for-tests --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --with-deps --with-pps --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--lang | --context | --debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --format)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --lang | --context | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --format | --with-pps | --with-deps | --sanitize-for-tests | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_ya() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --format --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --lang --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--lang | --debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --context | --format)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --lang | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --context | --format | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_za() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --format --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --lang --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--format | --error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --lang)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --format | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --lang | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Aa() {
case "$2" in
0)
_dune_n "$1"
;;
esac
}
_dune_Ba() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Aa "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --lang --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--lang | --debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --lang | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Ca() {
case "$2" in
0)
_dune_n "$1"
;;
esac
}
_dune_Da() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Ca "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --field --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --field)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --field | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Ea() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_Fa() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Ea "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --makefile --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --recursive --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -m -o -r -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
-o | --error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | -m | --makefile | -o | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | -r | --recursive | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Ga() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --na --no-buffer --no-print-directory --not-available --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --na | --not-available | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Ha() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_Ia() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Ha "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Ja() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_Ka() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Ja "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_La() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --format --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--context | --error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --format)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --context | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --format | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Ma() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_Na() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Ma "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Oa() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_Pa() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Oa "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --transitive --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --transitive | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Qa() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Ra() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "lock list-locked-dependencies dependency-hash"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
lock)
_dune_Na "$1" "$2" "$3"
return "$?"
;;
list-locked-dependencies)
_dune_Pa "$1" "$2" "$3"
return "$?"
;;
dependency-hash)
_dune_Qa "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Sa() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Ta() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Ua() {
case "$2" in
0)
_dune_n "$1"
;;
esac
}
_dune_Va() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Ua "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--context | --error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --context | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Wa() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_Xa() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "workspace external-lib-deps opam-files pp env rules installed-libraries targets aliases package-entries pkg contexts depexts location"
_dune_Wa "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --format --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --lang --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --sanitize-for-tests --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --with-deps --with-pps --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--lang | --context | --debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --format)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --lang | --context | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --format | --with-pps | --with-deps | --sanitize-for-tests | --manpage)
p=1
;;
workspace)
_dune_xa "$1" "$2" "$3"
return "$?"
;;
external-lib-deps)
_dune_ya "$1" "$2" "$3"
return "$?"
;;
opam-files)
_dune_za "$1" "$2" "$3"
return "$?"
;;
pp)
_dune_Ba "$1" "$2" "$3"
return "$?"
;;
env)
_dune_Da "$1" "$2" "$3"
return "$?"
;;
rules)
_dune_Fa "$1" "$2" "$3"
return "$?"
;;
installed-libraries)
_dune_Ga "$1" "$2" "$3"
return "$?"
;;
targets)
_dune_Ia "$1" "$2" "$3"
return "$?"
;;
aliases)
_dune_Ka "$1" "$2" "$3"
return "$?"
;;
package-entries)
_dune_La "$1" "$2" "$3"
return "$?"
;;
pkg)
_dune_Ra "$1" "$2" "$3"
return "$?"
;;
contexts)
_dune_Sa "$1" "$2" "$3"
return "$?"
;;
depexts)
_dune_Ta "$1" "$2" "$3"
return "$?"
;;
location)
_dune_Va "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Ya() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_Za() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Ya "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --format --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --lang --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --sanitize-for-tests --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --with-deps --with-pps --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--lang | --context | --debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --format)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --lang | --context | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --format | --with-pps | --with-deps | --sanitize-for-tests | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune__b() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --format --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --lang --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--lang | --debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --context | --format)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --lang | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --context | --format | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_ab() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --format --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --lang --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--format | --error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --lang)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --format | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --lang | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_bb() {
case "$2" in
0)
_dune_n "$1"
;;
esac
}
_dune_cb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_bb "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --lang --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--lang | --debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --lang | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_db() {
case "$2" in
0)
_dune_n "$1"
;;
esac
}
_dune_eb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_db "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --field --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --field)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --field | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_fb() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_gb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_fb "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --makefile --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --recursive --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -m -o -r -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
-o | --error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | -m | --makefile | -o | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | -r | --recursive | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_hb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --na --no-buffer --no-print-directory --not-available --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --na | --not-available | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_ib() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_jb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_ib "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_kb() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_lb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_kb "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_mb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --format --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--context | --error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache | --format)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --context | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --format | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_nb() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_ob() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_nb "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_pb() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_qb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_pb "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --transitive --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --transitive | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_rb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_sb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "lock list-locked-dependencies dependency-hash"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
lock)
_dune_ob "$1" "$2" "$3"
return "$?"
;;
list-locked-dependencies)
_dune_qb "$1" "$2" "$3"
return "$?"
;;
dependency-hash)
_dune_rb "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_tb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_ub() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --context)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --context | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_vb() {
case "$2" in
0)
_dune_n "$1"
;;
esac
}
_dune_wb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_vb "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --context --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--context | --error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --context | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_xb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "workspace external-lib-deps opam-files pp env rules installed-libraries targets aliases package-entries pkg contexts depexts location"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
workspace)
_dune_Za "$1" "$2" "$3"
return "$?"
;;
external-lib-deps)
_dune__b "$1" "$2" "$3"
return "$?"
;;
opam-files)
_dune_ab "$1" "$2" "$3"
return "$?"
;;
pp)
_dune_cb "$1" "$2" "$3"
return "$?"
;;
env)
_dune_eb "$1" "$2" "$3"
return "$?"
;;
rules)
_dune_gb "$1" "$2" "$3"
return "$?"
;;
installed-libraries)
_dune_hb "$1" "$2" "$3"
return "$?"
;;
targets)
_dune_jb "$1" "$2" "$3"
return "$?"
;;
aliases)
_dune_lb "$1" "$2" "$3"
return "$?"
;;
package-entries)
_dune_mb "$1" "$2" "$3"
return "$?"
;;
pkg)
_dune_sb "$1" "$2" "$3"
return "$?"
;;
contexts)
_dune_tb "$1" "$2" "$3"
return "$?"
;;
depexts)
_dune_ub "$1" "$2" "$3"
return "$?"
;;
location)
_dune_wb "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_yb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --all --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --all | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_zb() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_Ab() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_zb "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --wait | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Bb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Cb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "status build ping"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
status)
_dune_yb "$1" "$2" "$3"
return "$?"
;;
build)
_dune_Ab "$1" "$2" "$3"
return "$?"
;;
ping)
_dune_Bb "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Db() {
case "$2" in
0)
_dune_n "$1"
;;
esac
}
_dune_Eb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Db "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Fb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Gb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--global-symbol-prefix --minify-global-names --minify-local-variables --no-command-hash-in-function-names --no-comments --no-whitespace --optimize-case-statements --program-exe-for-reentrant-query --program-name"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--global-symbol-prefix | --program-exe-for-reentrant-query | --program-name)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--optimize-case-statements | --minify-local-variables | --minify-global-names | --no-whitespace | --no-comments | --no-command-hash-in-function-names | --global-symbol-prefix | --program-exe-for-reentrant-query | --program-name)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Hb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "dump latest-lang-version print-completion-script-bash"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
dump)
_dune_Eb "$1" "$2" "$3"
return "$?"
;;
latest-lang-version)
_dune_Fb "$1" "$2" "$3"
return "$?"
;;
print-completion-script-bash)
_dune_Gb "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Ib() {
case "$2" in
0 | 1)
_dune_n "$1"
;;
esac
}
_dune_Jb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Ib "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --libs --manpage --no-buffer --no-print-directory --only-packages --ppx --print-metrics --profile --promote-install-files --public --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --libs | --public | --ppx)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --libs | --public | --ppx | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Kb() {
case "$2" in
0 | 1)
_dune_n "$1"
;;
esac
}
_dune_Lb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Kb "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --inline-tests --instrument-with --kind --libs --manpage --no-buffer --no-print-directory --only-packages --pkg --ppx --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--kind | --ppx | --libs | --debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --pkg)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --kind | --ppx | --libs | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --inline-tests | --pkg | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Mb() {
case "$2" in
0 | 1)
_dune_n "$1"
;;
esac
}
_dune_Nb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Mb "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --inline-tests --instrument-with --libs --manpage --no-buffer --no-print-directory --only-packages --ppx --print-metrics --profile --promote-install-files --public --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--ppx | --public | --libs | --error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --ppx | --public | --libs | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --inline-tests | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Ob() {
case "$2" in
0 | 1)
_dune_n "$1"
;;
esac
}
_dune_Pb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Ob "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --libs --manpage --no-buffer --no-print-directory --only-packages --ppx --print-metrics --profile --promote-install-files --public --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --libs | --public | --ppx)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --libs | --public | --ppx | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Qb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "executable project library test"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
executable)
_dune_Jb "$1" "$2" "$3"
return "$?"
;;
project)
_dune_Lb "$1" "$2" "$3"
return "$?"
;;
library)
_dune_Nb "$1" "$2" "$3"
return "$?"
;;
test)
_dune_Pb "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Rb() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_Sb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Rb "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Tb() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_Ub() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Tb "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Vb() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_Wb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Vb "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Xb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "list apply diff"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
list)
_dune_Sb "$1" "$2" "$3"
return "$?"
;;
apply)
_dune_Ub "$1" "$2" "$3"
return "$?"
;;
diff)
_dune_Wb "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Yb() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_Zb() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_Yb "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --print-perf-stats --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --version-preference --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --version-preference)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --version-preference | --print-perf-stats | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune__c() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_ac() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune__c "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_bc() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_cc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_bc "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --transitive --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --transitive | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_dc() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_ec() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_dc "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_fc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_gc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "lock print-solver-env outdated validate-lockdir enabled"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
lock)
_dune_Zb "$1" "$2" "$3"
return "$?"
;;
print-solver-env)
_dune_ac "$1" "$2" "$3"
return "$?"
;;
outdated)
_dune_cc "$1" "$2" "$3"
return "$?"
;;
validate-lockdir)
_dune_ec "$1" "$2" "$3"
return "$?"
;;
enabled)
_dune_fc "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_hc() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_ic() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_hc "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --print-perf-stats --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --version-preference --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting | --version-preference)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --version-preference | --print-perf-stats | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_jc() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_kc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_jc "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_lc() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_mc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_lc "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --transitive --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --transitive | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_nc() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_oc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_nc "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_pc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_qc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "lock print-solver-env outdated validate-lockdir enabled"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
lock)
_dune_ic "$1" "$2" "$3"
return "$?"
;;
print-solver-env)
_dune_kc "$1" "$2" "$3"
return "$?"
;;
outdated)
_dune_mc "$1" "$2" "$3"
return "$?"
;;
validate-lockdir)
_dune_oc "$1" "$2" "$3"
return "$?"
;;
enabled)
_dune_pc "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_rc() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_sc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_rc "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_tc() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_uc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_tc "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_vc() {
case "$2" in
*)
_dune_n "$1"
;;
esac
}
_dune_wc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_vc "$2" "$i"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_xc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "ocamlformat ocamllsp ocamlearlybird"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
ocamlformat)
_dune_sc "$1" "$2" "$3"
return "$?"
;;
ocamllsp)
_dune_uc "$1" "$2" "$3"
return "$?"
;;
ocamlearlybird)
_dune_wc "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_yc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_zc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Ac() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Bc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Cc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--error-reporting | --file-watcher | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --config-file | --root | --default-target | --promote-install-files | --dump-memo-graph | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --cache-storage-mode | --action-stdout-on-success | --workspace | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --instrument-with | --watch-exclusions | --debug-cache)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --stop-on-first-error | --error-reporting | --wait-for-filesystem-clock | --file-watcher | --build-info | --no-print-directory | --trace-file | --build-dir | --profile | --only-packages | --require-dune-project-file | --always-show-command-line | --config-file | --root | --ignore-promoted-rules | --default-target | --promote-install-files | --ignore-lock-dir | --release | --dump-memo-graph-with-timing | --dump-memo-graph | --watch | -w | --auto-promote | --no-buffer | --debug-digests | --debug-artifact-substitution | --debug-dependency-path | --action-stderr-on-success | --cache-check-probability | --cache | --terminal-persistence | -j | --sandbox | --verbose | --cache-storage-mode | --action-stdout-on-success | --debug-backtraces | --debug-load-dir | --debug-package-logs | --workspace | --force | -f | --print-metrics | --dump-memo-graph-format | --dump-gc-stats | -x | --diff-command | --trace-extended | --store-orig-source-dir | --instrument-with | --watch-exclusions | --debug-cache | --display-separate-messages | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Dc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "ocamlformat odoc ocamllsp utop ocamlearlybird"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
ocamlformat)
_dune_yc "$1" "$2" "$3"
return "$?"
;;
odoc)
_dune_zc "$1" "$2" "$3"
return "$?"
;;
ocamllsp)
_dune_Ac "$1" "$2" "$3"
return "$?"
;;
utop)
_dune_Bc "$1" "$2" "$3"
return "$?"
;;
ocamlearlybird)
_dune_Cc "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Ec() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --allow-not-installed --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --allow-not-installed | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Fc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --allow-not-installed --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --allow-not-installed | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Gc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --allow-not-installed --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --allow-not-installed | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Hc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --allow-not-installed --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --allow-not-installed | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Ic() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--action-stderr-on-success --action-stdout-on-success --allow-not-installed --always-show-command-line --auto-promote --build-dir --build-info --cache --cache-check-probability --cache-storage-mode --config-file --debug-artifact-substitution --debug-backtraces --debug-cache --debug-dependency-path --debug-digests --debug-load-dir --debug-package-logs --default-target --diff-command --display-separate-messages --dump-gc-stats --dump-memo-graph --dump-memo-graph-format --dump-memo-graph-with-timing --error-reporting --file-watcher --force --help --ignore-lock-dir --ignore-promoted-rules --instrument-with --manpage --no-buffer --no-print-directory --only-packages --print-metrics --profile --promote-install-files --release --require-dune-project-file --root --sandbox --stop-on-first-error --store-orig-source-dir --terminal-persistence --trace-extended --trace-file --verbose --wait-for-filesystem-clock --watch --watch-exclusions --workspace -f -h -j -w -x"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
--debug-cache | --watch-exclusions | --instrument-with | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --workspace | --action-stdout-on-success | --cache-storage-mode | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --dump-memo-graph | --promote-install-files | --default-target | --root | --config-file | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --file-watcher | --error-reporting)
_dune_n "$2"
return "$_dune_a"
;;
esac
fi
case "$w" in
--help | -h | --display-separate-messages | --debug-cache | --watch-exclusions | --instrument-with | --store-orig-source-dir | --trace-extended | --diff-command | -x | --dump-gc-stats | --dump-memo-graph-format | --print-metrics | --force | -f | --workspace | --debug-package-logs | --debug-load-dir | --debug-backtraces | --action-stdout-on-success | --cache-storage-mode | --verbose | --sandbox | -j | --terminal-persistence | --cache | --cache-check-probability | --action-stderr-on-success | --debug-dependency-path | --debug-artifact-substitution | --debug-digests | --no-buffer | --auto-promote | --watch | -w | --dump-memo-graph | --dump-memo-graph-with-timing | --release | --ignore-lock-dir | --promote-install-files | --default-target | --ignore-promoted-rules | --root | --config-file | --always-show-command-line | --require-dune-project-file | --only-packages | --profile | --build-dir | --trace-file | --no-print-directory | --build-info | --file-watcher | --wait-for-filesystem-clock | --error-reporting | --stop-on-first-error | --allow-not-installed | --manpage)
p=1
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Jc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "ocamlformat odoc ocamllsp utop ocamlearlybird"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
ocamlformat)
_dune_Ec "$1" "$2" "$3"
return "$?"
;;
odoc)
_dune_Fc "$1" "$2" "$3"
return "$?"
;;
ocamllsp)
_dune_Gc "$1" "$2" "$3"
return "$?"
;;
utop)
_dune_Hc "$1" "$2" "$3"
return "$?"
;;
ocamlearlybird)
_dune_Ic "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Kc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "exec install which"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
exec)
_dune_xc "$1" "$2" "$3"
return "$?"
;;
install)
_dune_Dc "$1" "$2" "$3"
return "$?"
;;
which)
_dune_Jc "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
_dune_Lc() {
local p="0" i="0"
while true; do
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
_dune_o "$2" "runtest test installed-libraries external-lib-deps build fmt clean install uninstall exec subst rules utop promote printenv help format-dune-file upgrade cache top ocaml-merlin shutdown diagnostics monitor ocaml coq describe show rpc internal init promotion pkg package tools"
if [ "${#COMPREPLY[@]}" == "0" ]; then
_dune_o "$2" "--help --manpage -h"
fi
return "$_dune_a"
else
local w s
w=$(_dune_j)
s=$?
if [ "$s" -ne 0 ]; then
return "$s"
fi
_dune_k
if _dune_m; then
return "$_dune_c"
fi
if _dune_l; then
case "$w" in
esac
fi
case "$w" in
--help | -h | --manpage)
p=1
;;
runtest)
_dune_r "$1" "$2" "$3"
return "$?"
;;
test)
_dune_t "$1" "$2" "$3"
return "$?"
;;
installed-libraries)
_dune_u "$1" "$2" "$3"
return "$?"
;;
external-lib-deps)
_dune_w "$1" "$2" "$3"
return "$?"
;;
build)
_dune_y "$1" "$2" "$3"
return "$?"
;;
fmt)
_dune_z "$1" "$2" "$3"
return "$?"
;;
clean)
_dune_A "$1" "$2" "$3"
return "$?"
;;
install)
_dune_C "$1" "$2" "$3"
return "$?"
;;
uninstall)
_dune_E "$1" "$2" "$3"
return "$?"
;;
exec)
_dune_G "$1" "$2" "$3"
return "$?"
;;
subst)
_dune_H "$1" "$2" "$3"
return "$?"
;;
rules)
_dune_J "$1" "$2" "$3"
return "$?"
;;
utop)
_dune_L "$1" "$2" "$3"
return "$?"
;;
promote)
_dune_N "$1" "$2" "$3"
return "$?"
;;
printenv)
_dune_P "$1" "$2" "$3"
return "$?"
;;
help)
_dune_R "$1" "$2" "$3"
return "$?"
;;
format-dune-file)
_dune_T "$1" "$2" "$3"
return "$?"
;;
upgrade)
_dune_U "$1" "$2" "$3"
return "$?"
;;
cache)
_dune_Y "$1" "$2" "$3"
return "$?"
;;
top)
_dune__a "$1" "$2" "$3"
return "$?"
;;
ocaml-merlin)
_dune_aa "$1" "$2" "$3"
return "$?"
;;
shutdown)
_dune_ba "$1" "$2" "$3"
return "$?"
;;
diagnostics)
_dune_ca "$1" "$2" "$3"
return "$?"
;;
monitor)
_dune_da "$1" "$2" "$3"
return "$?"
;;
ocaml)
_dune_sa "$1" "$2" "$3"
return "$?"
;;
coq)
_dune_va "$1" "$2" "$3"
return "$?"
;;
describe)
_dune_Xa "$1" "$2" "$3"
return "$?"
;;
show)
_dune_xb "$1" "$2" "$3"
return "$?"
;;
rpc)
_dune_Cb "$1" "$2" "$3"
return "$?"
;;
internal)
_dune_Hb "$1" "$2" "$3"
return "$?"
;;
init)
_dune_Qb "$1" "$2" "$3"
return "$?"
;;
promotion)
_dune_Xb "$1" "$2" "$3"
return "$?"
;;
pkg)
_dune_gc "$1" "$2" "$3"
return "$?"
;;
package)
_dune_qc "$1" "$2" "$3"
return "$?"
;;
tools)
_dune_Kc "$1" "$2" "$3"
return "$?"
;;
-*)
p=0
;;
*)
if [ "$p" -eq 0 ]; then
i=$((i+1))
fi
p=0
;;
esac
fi
done
}
complete -F _dune_complete dune
